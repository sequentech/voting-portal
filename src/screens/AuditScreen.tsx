// SPDX-FileCopyrightText: 2023 Félix Robles <felix@sequentech.io>
//
// SPDX-License-Identifier: AGPL-3.0-only
import React, {useState} from "react"
import {Box} from "@mui/material"
import {useTranslation} from "react-i18next"
import {
    Icon,
    PageLimit,
    BreadCrumbSteps,
    BallotHash,
    Dialog,
    IconButton,
    WarnBox,
    stringToHtml,
    theme,
    isNull,
} from "ui-essentials"
import {styled} from "@mui/material/styles"
import Button from "@mui/material/Button"
import {
    faPrint,
    faAngleRight,
    faCircleQuestion,
    faDownload,
} from "@fortawesome/free-solid-svg-icons"
import {Link as RouterLink} from "react-router-dom"
import {Typography} from "@mui/material"
import {provideBallotService} from "../services/BallotService"
import {IAuditableBallot} from "sequent-core"

const EXAMPLE_AUDITABLE_BALLOT = `{"ballot_hash":"d07955d0a6a0d1f06d99323b02275f94dace3ef012d942a19b1acedba9948669","choices":[{"alpha":"35085481782252877459308286302572052010404030664333816164071397003095529597497227106621986012791849939895480398452386791753940307548721859137430957001692828597049568340087580380773203487345029775177300032504125275339019860278006856177684238505900809791812310175614395325013502371013268713208522093604486304271211134336255370119257176158103265028799279923654880344013461620586644394251597063107538551042066478437571295319729138166708107852234171060575284393847549713012746206622927826652731517954365560097081051609843781250844848571044653523682080184587543378949942618230306018702813253784253221526328840958608733814336","beta":"13258274107222363772926818292646385811196813348222460093075996987040381388970976834764720666199230675468720145924939284876439899541151916451176876943710313677953556905742300773104933264811977616230170484925614979072658157917032809750553090990563557785785575761803181472780815925200120759179215908288690261445168642927882833886753092590007259849934666329344420320979008501117071304040090059916762746675442226320614700029219269819610055140421479900738694557287783051292002406234570980012240247971201354835665777000141706311251222302258394185249019188159573551457465777709897767748350185120364433024496448427790560846615","plaintext":"2","randomness":"10387885777252415399114550438787959009153481376235992220787794786128529587343180135392620906906082717760123181067688750216872171621890885888048808783190045525369448633776526020282940065561758810860299825553074721943218291422557836861648618695735740355573743363837960380468798627498839482366163760972566225453907799392322657655809785748521238536452451140058831370863615623372216263982284720999505205627225704541786416735725221614571525585824738261507935329927936456413906758713353190434642217312691877935685668730801389148671568158299083717039772054468172869946350624198404174999371880571605755244495346224646057941118"}],"election_url":"https://felix-dev.sequentech.io/elections/api/election/34570001","issue_date":"01/08/2023","proofs":[{"challenge":"77237361218536160215201941889860373318910266093150975434655629880042866680446","commitment":"43633537483035272481189438077978110597019860367498953685926700792934977268661330587247159270332329415652500462027310398056332439007897222767418865043512715242865847315142656912423708763412293732072275081397143568730396283497650812726854674520655150654054744696999847148237039225476758585987664105791010069598972694199976424494268668033586369652002748003100637686573245029717834010880424840742114232093172853685122258601959668039647889093974450482726433885689595907166917525427660068096925712702840955401700720172375316704836876169495592560020794564141446902204442541735385224184863927261413452608967431119675950010289","response":"14265949188171619430481428298960451800635196661006003350729497252014426889662412996735675687284061231901009911260131279300470858967461226688369571025830831142998195460834892019244165589472595303180110216716681619068962763428624846815802788653181618993439636051777945407916303887510945140934397092422867646631216683605091481028031059819549124094523423724655329247081546016117695682390732479310260492813165068655306727487221298273013405390552740185988988665719877677204611523594793716347007079391281919611374447307015246110369862500573182250491026476681673014733435250879303233182508041018901107837200028998845426023788"}]}"`

const FORMATTED_AUDITABLE_BALLOT: IAuditableBallot = {
    issue_date: "7/10/2021",
    ballot_hash: "1a68db426186956bfd2fe6d023869e83a1ffef4e15b8f7aca399104940645e6a",
    choices: [
        {
            alpha: "4573521844668499915363489837812031582300016098131658195884185202380963119062758740048514811712340742557644709288129972188631887628555652854047291205221130837572203740466648383021904463807840275144327790703059464374748097200395339083317594255854546852386767582478733444927590902153395844210283330620686118230567258001982554345742939767593628567753838884464366698655629256138817904314129424489158581871380876402331876236981553590472740790643207226334896885332714135594998469880797771165229311809224511388908376871034608386930812949134413486437651249546029371724359983587239946809599213199847818007597486949050607513659",
            beta: "35456475966801286635087508236740391643698172332537567760466745735713873020309336381333933290892814035866637514181122620550952356596848601971501157325218894800846256124211339314305956964471820480381808640060165356601536945013809993799838216637881115738613736506655589800055483456840170950061964502619024385200793451605101463196527702748588752475432756653080709841996971272775373037310582176467623956641058631844469253595633953763173012994672615217278071752538202676895328388366223205654164403188565219194654010823755933303036680111469831109236560350522994465419308002341760615855841767855655767783803526119142613096956",
            plaintext: "48",
            randomness:

        },
        {
            alpha: "40866986594650788440745064383224287530004327197990397141024216829820568946096547283045961996979271337960772595994358375804866395656152207797494298160567055504536322322353185343787472158015511399412572846517986498609505821755160134427688694993647256770520976644717995992794072793812059034908687460329441818469628804714713299936436062366585508679599714043870450651748483930823036111417355922199349866384312951270080056668157276403206494196615483929556108368649018195392068487461548566316489837824452290757209059601612883529281470818431318317876518441829744697339837953983794021810893446747682953041577511961384833749341",
            beta: "5967027883890196018556985645111965682052867292238472342327453564576950850454500517939163721458735072609109869876852397818609210183657122016064590050450100448794375539375803551183596397690001778717033725955259152090717843713984792738966802149032994101598261141653930685618074080972343914036708252955459967064509679774079083405562606008122098498532342166973211142218856241624105713465270196731147267770792146964720807733525041057845010566544339879700399557399052671565446351000473791160051314318025230875374113308498090213402136343525142572079710321361914456110899196006889261247685327579956066374903589629170956288821",
            plaintext: "14",
            randomness:

        },
    ],
    proofs: [],
    config: {
        id: 1,
        configuration: {
            id: 1,
            layout: "pcandidates-election",
            director: "wadobo-auth3",
            authorities: ["sequent-auth4"],
            title: "Votaciones Municipales de algún sitio",
            description: "Blah blah",
            questions: [
                {
                    description:
                        "Elige quien quieres que sea tu Secretario General en tu municipio",
                    layout: "",
                    min: 0,
                    max: 1,
                    num_winners: 1,
                    title: "Secretario General",
                    tally_type: "plurality-at-large",
                    answer_total_votes_percentage: "over-total-valid-votes",
                    answers: [
                        {
                            id: 0,
                            category: "Candidaturas no agrupadas",
                            details: "",
                            sort_order: 0,
                            urls: [],
                            text: "José Rabano Pimiento",
                        },
                        {
                            id: 1,
                            category: "Candidaturas no agrupadas",
                            details: "",
                            sort_order: 1,
                            urls: [],
                            text: "Miguel Pimentel Inventado",
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Juan Iglesias Torquemada",
                            sort_order: 2,
                            details: "",
                            urls: [],
                            id: 2,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Mari Pili Hernández Ordoñez",
                            sort_order: 3,
                            details: "",
                            urls: [],
                            id: 3,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Juan Y Medio",
                            sort_order: 4,
                            details: "",
                            urls: [],
                            id: 4,
                        },
                    ],
                },
                {
                    description: "Elige los miembros del Consejo Ciudadano",
                    layout: "-",
                    min: 0,
                    max: 5,
                    num_winners: 5,
                    title: "Consejo Ciudadano",
                    tally_type: "plurality-at-large",
                    answer_total_votes_percentage: "over-total-valid-votes",
                    answers: [
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Vicente Bizancio Castillo",
                            sort_order: 0,
                            details: "",
                            urls: [],
                            id: 0,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Argos de la Cruz",
                            sort_order: 1,
                            details: "",
                            urls: [],
                            id: 1,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Gorrión Turrón Pastel",
                            sort_order: 2,
                            details: "",
                            urls: [],
                            id: 2,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Mari Pili de la Estrella",
                            sort_order: 3,
                            details: "",
                            urls: [],
                            id: 3,
                        },
                        {
                            category: "Candidaturas no agrupadas",
                            text: "Zubiarreta Renata Atade",
                            sort_order: 4,
                            details: "",
                            urls: [],
                            id: 4,
                        },
                    ],
                },
            ],
            end_date: "2014-12-28T09:00:00.231",
            start_date: "2014-12-26T09:00:00.231",
            presentation: {
                theme: "podemos",
                urls: [],
                theme_css: "",
            },
            virtual: false,
            tally_allowed: true,
            publicCandidates: true,
        },
        state: "results_ok",
        startDate: "2014-12-26 09:00:00.231",
        endDate: "2014-12-28 09:00:00.231",
        pks: '[{"y":"46113600226254707132623296317145541967832068018368376019264229918481260577048305192466164127547283462606187951045959162115819259862691046746466830370875295999543174134523951594084363151171450398748309046080197313989409206335666191525670371979020038042752263662770039796476698505720651215394787906331184444957244208447158510832236462776356311201796915047860645820719489658234856592511843896037033288759763144029464118973396434778037577722656766677055750264799633736089836848638770071029010698787110594893461586976887031808947265827824363113446220181628631474263770346764639899846170194308310292694694771999287908716827","q": "24792774508736884642868649594982829646677044143456685966902090450389126928108831401260556520412635107010557472033959413182721740344201744439332485685961403243832055703485006331622597516714353334475003356107214415133930521931501335636267863542365051534250347372371067531454567272385185891163945756520887249904654258635354225185183883072436706698802915430665330310171817147030511296815138402638418197652072758525915640803066679883309656829521003317945389314422254112846989412579196000319352105328237736727287933765675623872956765501985588170384171812463052893055840132089533980513123557770728491280124996262883108653723","p": "49585549017473769285737299189965659293354088286913371933804180900778253856217662802521113040825270214021114944067918826365443480688403488878664971371922806487664111406970012663245195033428706668950006712214428830267861043863002671272535727084730103068500694744742135062909134544770371782327891513041774499809308517270708450370367766144873413397605830861330660620343634294061022593630276805276836395304145517051831281606133359766619313659042006635890778628844508225693978825158392000638704210656475473454575867531351247745913531003971176340768343624926105786111680264179067961026247115541456982560249992525766217307447","g": "27257469383433468307851821232336029008797963446516266868278476598991619799718416119050669032044861635977216445034054414149795443466616532657735624478207460577590891079795564114912418442396707864995938563067755479563850474870766067031326511471051504594777928264027177308453446787478587442663554203039337902473879502917292403539820877956251471612701203572143972352943753791062696757791667318486190154610777475721752749567975013100844032853600120195534259802017090281900264646220781224136443700521419393245058421718455034330177739612895494553069450438317893406027741045575821283411891535713793639123109933196544017309147"},{"y":"49255557909566377757205787942241920039300614692228631933601582821106871068005356966433637214118407121245354594153824991276653304636628584850713636052557060219166337409263662901005610924779652768416782653063104603596145563915869808761324667445814546620159061672864086092992572276054930288759193130207398313556889441768712811418707815590377969200124994502555199142105124140414055104449381909211225399423619114132430929198004305153560570240084213683322189831030472103223092473610276457748166677617242297272670929119424923393774252900481085781723237077938740536050524204345920190173074197841944187454308298978583594373295","q": "24792774508736884642868649594982829646677044143456685966902090450389126928108831401260556520412635107010557472033959413182721740344201744439332485685961403243832055703485006331622597516714353334475003356107214415133930521931501335636267863542365051534250347372371067531454567272385185891163945756520887249904654258635354225185183883072436706698802915430665330310171817147030511296815138402638418197652072758525915640803066679883309656829521003317945389314422254112846989412579196000319352105328237736727287933765675623872956765501985588170384171812463052893055840132089533980513123557770728491280124996262883108653723","p": "49585549017473769285737299189965659293354088286913371933804180900778253856217662802521113040825270214021114944067918826365443480688403488878664971371922806487664111406970012663245195033428706668950006712214428830267861043863002671272535727084730103068500694744742135062909134544770371782327891513041774499809308517270708450370367766144873413397605830861330660620343634294061022593630276805276836395304145517051831281606133359766619313659042006635890778628844508225693978825158392000638704210656475473454575867531351247745913531003971176340768343624926105786111680264179067961026247115541456982560249992525766217307447","g": "27257469383433468307851821232336029008797963446516266868278476598991619799718416119050669032044861635977216445034054414149795443466616532657735624478207460577590891079795564114912418442396707864995938563067755479563850474870766067031326511471051504594777928264027177308453446787478587442663554203039337902473879502917292403539820877956251471612701203572143972352943753791062696757791667318486190154610777475721752749567975013100844032853600120195534259802017090281900264646220781224136443700521419393245058421718455034330177739612895494553069450438317893406027741045575821283411891535713793639123109933196544017309147"}]',
        virtual: false,
        tallyAllowed: true,
        publicCandidates: true,
        trusteeKeysState: [],
    },
}

const ActionsContainer = styled(Box)`
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: 2px;
`

const StyledButton = styled(Button)`
    display flex;
    padding: 5px;

    span {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        padding: 5px;
    }
`

const StyledTitle = styled(Typography)`
    margin-top: 25.5px;
    display: flex;
    flex-direction: row;
    gap: 16px;
`

const StyledLink = styled(RouterLink)`
    margin: auto 0;
    text-decoration: none;
`

const Step1Container = styled(Box)`
    display: flex;
    flex-direction: row;
    justify-content: space-between;
`

const AuditableBallotData = styled(Box)`
    word-break: break-word;
    hyphens: auto;
    padding: 15px;
    background-color: #ecfdf5;
    color: #000;
    border-radius: 4px;
    display: block;
    overflow-y: scroll;
    max-height: 200px;
    border: 1px solid #047857;
    margin: 4px 0;
`

const ActionButtons: React.FC = ({}) => {
    const {t} = useTranslation()
    const triggerPrint = () => window.print()

    return (
        <ActionsContainer>
            <StyledButton
                onClick={triggerPrint}
                variant="secondary"
                sx={{margin: "auto 0", width: {xs: "100%", sm: "200px"}}}
            >
                <Icon icon={faPrint} size="sm" />
                <Box>{t("auditScreen.printButton")}</Box>
            </StyledButton>
            <StyledLink to="/" sx={{margin: "auto 0", width: {xs: "100%", sm: "200px"}}}>
                <StyledButton sx={{width: {xs: "100%", sm: "200px"}}}>
                    <Box>{t("auditScreen.restartButton")}</Box>
                    <Icon icon={faAngleRight} size="sm" />
                </StyledButton>
            </StyledLink>
        </ActionsContainer>
    )
}

export const AuditScreen: React.FC = () => {
    const {t} = useTranslation()
    const [openBallotIdHelp, setOpenBallotIdHelp] = useState(false)
    const [openStep1Help, setOpenStep1Help] = useState(false)
    const [openStep2Help, setOpenStep2Help] = useState(false)
    const {hashBallot512} = provideBallotService()
    const [hash, setHash] = useState<string | null>(null)

    const doHashBallot = () => {
        try {
            const value = hashBallot512(FORMATTED_AUDITABLE_BALLOT)
            setHash(value)
        } catch (error) {
            console.log(error)
        }
    }

    return (
        <PageLimit maxWidth="lg">
            <BallotHash
                hash="eee6fe54bc8a5f3fce2d2b8aa1909259ceaf7df3266302b7ce1a65ad85a53a92"
                onHelpClick={() => setOpenBallotIdHelp(true)}
            />
            <Box marginTop="24px">
                <Dialog
                    handleClose={() => setOpenBallotIdHelp(false)}
                    open={openBallotIdHelp}
                    title={t("reviewScreen.ballotIdHelpDialog.title")}
                    ok={t("reviewScreen.ballotIdHelpDialog.ok")}
                    cancel={t("reviewScreen.ballotIdHelpDialog.cancel")}
                    variant="info"
                >
                    {stringToHtml(t("reviewScreen.ballotIdHelpDialog.content"))}
                </Dialog>
                <BreadCrumbSteps
                    labels={[
                        "breadcrumbSteps.ballot",
                        "breadcrumbSteps.review",
                        "breadcrumbSteps.confirmation",
                        "breadcrumbSteps.audit",
                    ]}
                    selected={3}
                    warning={true}
                />
            </Box>
            <StyledTitle variant="h4" fontSize="24px">
                <Box>{t("auditScreen.title")}</Box>
                <IconButton
                    icon={faCircleQuestion}
                    sx={{fontSize: "unset", lineHeight: "unset", paddingBottom: "2px"}}
                    fontSize="16px"
                    onClick={() => setOpenStep1Help(true)}
                />
                <Dialog
                    handleClose={() => setOpenStep1Help(false)}
                    open={openStep1Help}
                    title={t("auditScreen.step1HelpDialog.title")}
                    ok={t("auditScreen.step1HelpDialog.ok")}
                    variant="info"
                >
                    {stringToHtml(t("auditScreen.step1HelpDialog.content"))}
                </Dialog>
            </StyledTitle>
            <Typography variant="body2" sx={{color: theme.palette.customGrey.main}}>
                {stringToHtml(t("auditScreen.description"))}
            </Typography>
            <StyledTitle variant="h5" fontWeight="bold" fontSize="18px">
                <Box>{t("auditScreen.step1Title")}</Box>
                <IconButton
                    icon={faCircleQuestion}
                    sx={{fontSize: "unset", lineHeight: "unset", paddingBottom: "2px"}}
                    fontSize="16px"
                    onClick={() => setOpenStep1Help(true)}
                />
                <Dialog
                    handleClose={() => setOpenStep1Help(false)}
                    open={openStep1Help}
                    title={t("auditScreen.step1HelpDialog.title")}
                    ok={t("auditScreen.step1HelpDialog.ok")}
                    variant="info"
                >
                    {stringToHtml(t("auditScreen.step1HelpDialog.content"))}
                </Dialog>
            </StyledTitle>
            <Step1Container>
                <Typography variant="body2" sx={{color: theme.palette.customGrey.main}}>
                    {stringToHtml(t("auditScreen.step1Description"))}
                </Typography>
                <StyledButton sx={{minWidth: "unset", padding: "10px 16px"}} onClick={doHashBallot}>
                    <Icon icon={faDownload} size="sm" />
                    <Box sx={{display: {xs: "none", md: "flex"}}}>
                        {t("auditScreen.downloadButton")}
                    </Box>
                </StyledButton>
            </Step1Container>
            {isNull(hash) ? null : (
                <Typography variant="body2" sx={{color: theme.palette.customGrey.main}}>
                    {hash}
                </Typography>
            )}

            <AuditableBallotData>{EXAMPLE_AUDITABLE_BALLOT}</AuditableBallotData>
            <StyledTitle variant="h5" fontWeight="bold" fontSize="18px">
                <Box>{t("auditScreen.step2Title")}</Box>
                <IconButton
                    icon={faCircleQuestion}
                    sx={{fontSize: "unset", lineHeight: "unset", paddingBottom: "2px"}}
                    fontSize="16px"
                    onClick={() => setOpenStep2Help(true)}
                />
                <Dialog
                    handleClose={() => setOpenStep2Help(false)}
                    open={openStep2Help}
                    title={t("auditScreen.step2HelpDialog.title")}
                    ok={t("auditScreen.step2HelpDialog.ok")}
                    variant="info"
                >
                    {stringToHtml(t("auditScreen.step2HelpDialog.content"))}
                </Dialog>
            </StyledTitle>
            <Typography variant="body2" sx={{color: theme.palette.customGrey.main}}>
                {stringToHtml(t("auditScreen.step2Description"))}
            </Typography>
            <Box margin="15px 0 25px 0">
                <WarnBox variant="warning">{stringToHtml(t("auditScreen.bottomWarning"))}</WarnBox>
            </Box>
            <ActionButtons />
        </PageLimit>
    )
}
